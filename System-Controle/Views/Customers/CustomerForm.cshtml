@model System_Controle.ViewModels.CustomerFormViewModel
@{
    ViewBag.Title = "New";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>New Customer</h2>
<style>
    .field-validation-error {
        color: red
    }

    .input-validation-error {
        border: 2px solid red;
    }
</style>
@using (Html.BeginForm("Save", "Customers"))
{
    @Html.AntiForgeryToken();
    @Html.ValidationSummary();
    <div class="form-group">
        @Html.LabelFor(m => m.Customer.Name)
        @Html.TextBoxFor(m => m.Customer.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Customer.Name)
    </div>
    <div class="form-group">
        @Html.LabelFor(c => c.Customer.Birthdate)
        @Html.TextBoxFor(c => c.Customer.Birthdate, "{0:d MMM yyyy}", new { @class = "form-control" })
        @Html.ValidationMessageFor(c => c.Customer.Birthdate)
    </div>
    <div class="form-group">
        @Html.LabelFor(c => c.Customer.MembershipTypeId)
        @Html.DropDownListFor(c => c.Customer.MembershipTypeId, new SelectList(Model.MembershipTypes, "Id", "Name"), "Select", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Customer.MembershipTypeId)
    </div>
    <div class="checkbox">
        <label>
            @Html.CheckBoxFor(c => c.Customer.IsSubscribedToNewsletter, new { @class = "checkbox" }) Is Subscribed To Newsletter?
        </label>
    </div>

    @Html.HiddenFor(c => c.Customer.Id);
    <button class="btn btn-primary" type="submit">
        Save
    </button>


}
@section scripts
    {
    @Scripts.Render("~/bundles/jqueryval")
}


